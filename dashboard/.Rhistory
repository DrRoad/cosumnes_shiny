fit <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked, data = full, method = "class")
full
full$fare %>% unlist()
full$fare <- full$fare %>% unlist()
full
fit <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked, data = full, method = "class")
fit
fancyRpartPlot(fit)
install.packages("rattle")
install.packages("rpart.plot")
library(rattle)
library(rpart.plot)
fancyRpartPlot(fit)
library(rattle)
install.packages("rattle")
install.packages("GTK")
install.packages("RGtk2", depen=T)
library(rattle)
install.packages("rattle")
library(rattle)
library(rpart)
library(rattle)
library(rpart.plot)
fancyRpartPlot(fit)
rpart.plot::fancyRpartPlot(fit)
rpart.plot(fit)
fit <- rpart(age ~ pclass + sex + parch + fare, data = full, method = "class")
rpart.plot(fit)
rpart.plot(fit, tweak = .8)
rpart.plot(fit, tweak = .1)
rpart.plot(fit, tweak = .2)
rpart.plot(fit, tweak = .3)
rpart.plot(fit, tweak = .4)
rpart.plot(fit, tweak = .5)
rpart.plot(fit, tweak = .6)
fit <- rpart(age ~ pclass + sex + parch + fare + family_size, data = full, method = "class")
rpart.plot(fit, tweak = .6)
fit <- rpart(age ~ pclass + sex + parch + fare + family_size + sibsp + parch, data = full, method = "class")
rpart.plot(fit, tweak = .6)
plot(fit)
text(fit)
plot.new
plot.new()
text(fit)
rpart.plot(fit, tweak = .6)
fit <- rpart(Survived ~ pclass + sex + parch + fare + family_size + sibsp + parch, data = full, method = "class")
fit <- rpart(survived ~ pclass + sex + parch + fare + family_size + sibsp + parch, data = full, method = "class")
rpart.plot(fit, tweak = .6)
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size + sibsp + parch, data = full, method = "class")
rpart.plot(fit, tweak = .6)
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size + sibsp + parch, data = train, method = "class")
train
colnames(train) <- colnames(train) %>% tolower()
colnames(test) <- colnames(test) %>% tolower()
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size + sibsp + parch, data = train, method = "class")
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size + sibsp + parch,
data = full %>% filter(!is.na(survived)),
method = "class")
rpart.plot(fit, tweak = .6)
prediction <- predict(fit, test, type = "class")
full %>% filter(!is.na(survived))
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size_bin + sibsp + parch,
data = full %>% filter(!is.na(survived)),
method = "class")
rpart.plot(fit, tweak = .6)
prediction <- predict(fit, test, type = "class")
?predict
train <- full %>% filter(!is.na(survived))
test <- full %>% filter(is.na(survived))
full$fare <- full$fare %>% unlist()
train <- full %>% filter(!is.na(survived))
test <- full %>% filter(is.na(survived))
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size_bin + sibsp + parch,
data = train,
method = "class")
rpart.plot(fit, tweak = .6)
prediction <- predict(fit, test, type = "class")
rpart.plot(fit, tweak = 1)
rpart.plot(fit, tweak = 3)
rpart.plot(fit, tweak = 2)
rpart.plot(fit, tweak = 1.2)
?rpart.plot
fit <- rpart(survived ~ age + pclass + sex + parch + fare + family_size_bin + sibsp + parch,
data = train,
method = "class")
rpart.plot(fit, tweak = 1.2)
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp + parch,
data = train,
method = "class")
rpart.plot(fit, tweak = 1.2)
rpart.plot(fit, tweak = 1)
unique(full$age)
rpart.plot(fit, tweak = .6)
rpart.plot(fit, tweak = .8)
?mice
mice_mod <- mice(train, method='rf')
?complete
mice_output <- compelte(mice_mod)
mice_output <- complete(mice_mod)
mice_output
mice_mod <- mice(full, method='rf')
mice_mod <- mice(train, method='rf')
mice_output <- complete(mice_mod)
rbind(train$data = "original data", mice_output$data = "MICE output") %>%
train$data <- "original data"
mice_output$data <- "MICE output"
rbind(train, mice_output) %>%
ggplot() +
geom_histogram(aes(age)) + facet_wrap(~data)
rbind(train, mice_output) %>% ggplot() +
geom_histogram(aes(age)) + facet_wrap(~data)
rbind(train, mice_output)
rbind(train, mice_output) %>% ggplot() +
geom_histogram(aes(age)) + facet_wrap(~data)
rbind(train, mice_output) %>% ggplot() +
geom_density(aes(age)) + facet_wrap(~data)
prediction
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp + parch,
data = train,
method = "class")
rpart.plot(fit, tweak = .8)
prediction <- predict(fit, test, type = "class")
prediction
rpart_prediction <- predict(fit, test, type = "class")
mice_prediction <- complete(mice_mod)
rpart_prediction <- predict(fit, test, type = "class")
rpart_prediction$data = "Rpart prediction"
rpart_prediction$data <- "Rpart prediction"
rpart_prediction <- predict(fit, test, type = "class")
rpart_prediction
rpart_output <- data.frame(passengerid = seq(1:length(rpart_prediction),
age = rpart_prediction,
data = "Rpart prediction")
)
seq(1:length(rpart_prediction)
rpart_output <- data.frame(passengerid = seq(1:length(rpart_prediction),
rpart_output <- data.frame(passengerid = 1:length(rpart_prediction),
age = rpart_prediction,
data = "Rpart prediction")
rbind(
train %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
rbind(
train %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(factor(age))) + facet_wrap(~data)
train %>% select(passengerid, age, data)
rbind(
train %>% filter(!is.na(age)) %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
train
rpart_output
train
rpart_output <- data.frame(passengerid = 1:length(rpart_prediction),
age = as.double(rpart_prediction),
data = as.character("Rpart prediction"))
rbind(
train %>% filter(!is.na(age)) %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
rbind(train, mice_output) %>% ggplot() +
geom_density(aes(age)) + facet_wrap(~data)
train
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp,
data = train,
method = "class")
rpart.plot(fit, tweak = .8)
rpart_prediction <- predict(fit, test, type = "class")
rpart_output <- data.frame(passengerid = 1:length(rpart_prediction),
age = as.double(rpart_prediction),
data = as.character("Rpart prediction"))
rbind(
train %>% filter(!is.na(age)) %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp,
na.action = na.rpart,
data = train,
method = "class")
rpart.plot(fit, tweak = .8)
rpart_prediction <- predict(fit, test, type = "class")
# visualize: compare to original data
rpart_output <- data.frame(passengerid = 1:length(rpart_prediction),
age = as.double(rpart_prediction),
data = as.character("Rpart prediction"))
rbind(
train %>% filter(!is.na(age)) %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
?rpart
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp,
na.action = na.rpart,
data = train,
method = "anova")
sion tree
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp,
na.action = na.rpart,
data = train,
method = "anova")
rpart_prediction <- predict(fit, test, type = "class")
fit <- rpart(age ~ pclass + sex + parch + fare + family_size_bin + sibsp,
na.action = na.rpart,
data = train,
method = "class")
extractprediciton
rbind(
train %>% filter(!is.na(age)) %>% select(passengerid, age, data),
rpart_output
) %>%
ggplot() + geom_density(aes(age)) + facet_wrap(~data)
cbind.data.frame(train$age, mice_output$age)
library(rpart)
mice_mod <- mice(full, method='rf')
mice_output <- complete(mice_mod)
full$data <- "original data"
mice_output$data <- "MICE output"
rbind(full, mice_output) %>% ggplot() +
geom_density(aes(age)) + facet_wrap(~data)
cbind.data.frame(full$age, mice_output$age)
colnames(full)
mice_mod <- mice(full %>% select(pclass, title, sex, age, sibsp, parch, ticket, fare, embarked, family_size_bin), method='rf')
mice_output <- complete(mice_mod)
mice_mod <- mice(full, method='rf')
mice_output_noise <- complete(mice_mod)
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age)
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age))
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% mutate(diff = mice_output$age - mice_output_noise$age)
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age))
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% mutate(diff = 2-3)# depending on what info you include, imputed values canv vary a lot!
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% mutate(diff = `mice_output$age` - `mice_output_noise$age`)# depending on what info you include, imputed values canv vary a lot!
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% mutate(diff = `mice_output$age` - `mice_output_noise$age`) %>% ggplot() + geom_freqpoly(aes(diff))
?gather
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age)
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% gather(output, value, - `full$age`)
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% gather(output, value, - `full$age`) %>% ggplot() + geom_barplot(aes(x=output, y=value))
cbind.data.frame(full$age, mice_output$age, mice_output_noise$age) %>% filter(is.na(full$age)) %>% gather(output, value, - `full$age`) %>% ggplot() + geom_boxplot(aes(x=output, y=value))
full %>% select(pclass, title, sex, age, sibsp, parch, ticket, fare, embarked, family_size_bin)
mice_mod <- mice(full %>% select(pclass, title, sex, age, sibsp, parch, ticket, fare, embarked, family_size_bin), method='rf')
path <- c(R3, L5, R1, R2, L5, R2, R3, L2, L5, R5, L4, L3, R5, L1, R3, R4, R1, L3, R3, L2, L5, L2, R4, R5, R5, L4, L3, L3, R4, R4, R5, L5, L3, R2, R2, L3, L4, L5, R1, R3, L3, R2, L3, R5, L194, L2, L5, R2, R1, R1, L1, L5, L4, R4, R2, R2, L4, L1, R2, R53, R3, L5, R72, R2, L5, R3, L4, R187, L4, L5, L2, R1, R3, R5, L4, L4, R2, R5, L5, L4, L3, R5, L2, R1, R1, R4, L1, R2, L3, R5, L4, R2, L3, R1, L4, R4, L1, L2, R3, L1, L1, R4, R3, L4, R2, R5, L2, L3, L3, L1, R3, R5, R2, R3, R1, R2, L1, L4, L5, L2, R4, R5, L2, R4, R4, L3, R2, R1, L4, R3, L3, L4, L3, L1, R3, L2, R2, L4, L4, L5, R3, R5, R3, L2, R5, L2, L1, L5, L1, R2, R4, L5, R2, L4, L5, L4, L5, L2, L5, L4, R5, R3, R2, R2, L3, R3, L2, L5)
path<-(read_csv(R3, L5, R1, R2, L5, R2, R3, L2, L5, R5, L4, L3, R5, L1, R3, R4, R1, L3, R3, L2, L5, L2, R4, R5, R5, L4, L3, L3, R4, R4, R5, L5, L3, R2, R2, L3, L4, L5, R1, R3, L3, R2, L3, R5, L194, L2, L5, R2, R1, R1, L1, L5, L4, R4, R2, R2, L4, L1, R2, R53, R3, L5, R72, R2, L5, R3, L4, R187, L4, L5, L2, R1, R3, R5, L4, L4, R2, R5, L5, L4, L3, R5, L2, R1, R1, R4, L1, R2, L3, R5, L4, R2, L3, R1, L4, R4, L1, L2, R3, L1, L1, R4, R3, L4, R2, R5, L2, L3, L3, L1, R3, R5, R2, R3, R1, R2, L1, L4, L5, L2, R4, R5, L2, R4, R4, L3, R2, R1, L4, R3, L3, L4, L3, L1, R3, L2, R2, L4, L4, L5, R3, R5, R3, L2, R5, L2, L1, L5, L1, R2, R4, L5, R2, L4, L5, L4, L5, L2, L5, L4, R5, R3, R2, R2, L3, R3, L2, L5))
path <- read.csv("http://adventofcode.com/2016/day/1/input")
path
path <- read.csv("Users/rpauloo/Desktop/path.csv")
path
path <- read.csv("rpauloo/Desktop/path.csv")
path <- read.csv("/Users/richpauloo/Desktop/path.csv")
path <- read_csv("/Users/richpauloo/Desktop/path.csv")
path
path <- read_csv("/Users/richpauloo/Desktop/path.csv", header = FALSE)
path <- read.csv("/Users/richpauloo/Desktop/path.csv", header = FALSE)
path
t(path)
path <- read.csv("/Users/richpauloo/Desktop/path.csv", header = FALSE)
path
path %>% class()
path[1,] -> v
v
as.matrix(path)
t(path)
t(path) %>% str_extract(" ")
t(path) %>% str_extract(" *")
t(path) %>% str_extract("[* ]")
t(path) %>% str_extract("*[ ]")
t(path) %>% str_extract("[R|L]")
t(path) %>% str_extract("[R[:digit]|L[:digit]]")
t(path) %>% str_extract("[R|L]")
t(path) %>% str_extract("[:digit:]")
move <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
move
move %>% class()
x <- vector()
x <- matrix(nrow=200)
y <- matrix(nrow=200)
north <- seq(0, 3600, 360)
north
north <- seq(0, 36000, 360)
east <- seq(90, 36090, 360)
south <- seq(0, 36180, 360)
west <- seq(0, 36270, 360)
north <- seq(0, 36000, 360)
east <- seq(90, 36090, 360)
south <- seq(0, 36180, 360)
west <- seq(0, 36270, 360)
move <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
dir <- 0
north <- seq(0, 36000, 360)
east <- seq(90, 36090, 360)
south <- seq(0, 36180, 360)
west <- seq(0, 36270, 360)
x <- matrix(nrow=200)
y <- matrix(nrow=200)
turn <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
x <- matrix(NA, nrow=200)
y <- matrix(NA, nrow=200)
x
x <- matrix(NA, nrow=200)
y <- matrix(NA, nrow=200)
for(i in 1:length(move)){
turn <- turn[i]
walk <- walk[i]
if(turn == "R"){ dir <- dir + 90 }
if(turn == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
for(i in 1:length(move)){
turn <- turn[i]
walk <- walk[i]
if(turn[i] == "R"){ dir <- dir + 90 }
if(turn[i] == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
turn <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
turn
turn[1] =="R"
length(move)
for(i in 1:length(move)){
turn <- turn[i]
walk <- walk[i]
if(turn == "R"){ dir <- dir + 90 }
if(turn == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
turn[1]
turn[1] == "R"
turn <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
turn[1]
for(i in 1:length(move)){
turn <- turn[i]
walk <- walk[i]
if(turn == "R"){ dir <- dir + 90 }
if(turn == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
for(i in 1:length(move)){
if(turn[i] == "R"){ dir <- dir + 90 }
if(turn[i] == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
turn[1]
turn <- t(path) %>% str_extract("[R|L]")
turn[1]
turn[10]
turn[2]
for(i in 1:length(move)){
if(turn[i] == "R"){ dir <- dir + 90 }
if(turn[i] == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
x
y
walk[1]
walk[2]
turn <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]")
walk[2]
walk <- t(path) %>% str_extract("[:digit:]") %>% as.numeric()
walk
for(i in 1:length(move)){
if(turn[i] == "R"){ dir <- dir + 90 }
if(turn[i] == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
x
y
!is.na(x)
x[!is.na(x)]
x[!is.na(x)] %>% as.numeric()
north <- seq(0, 36000, 360)
east <- seq(90, 36090, 360)
south <- seq(180, 36180, 360)
west <- seq(270, 36270, 360)
x <- matrix(NA, nrow=200)
y <- matrix(NA, nrow=200)
for(i in 1:length(move)){
if(turn[i] == "R"){ dir <- dir + 90 }
if(turn[i] == "L"){ dir <- dir - 90 }
if(dir %in% north){ x[i,1] <- walk[i] }
if(dir %in% east){ y[i,1] <- walk[i] }
if(dir %in% south){ x[i,1] <- walk[i] * -1 }
if(dir %in% west){ y[i,1] <- walk[i] * -1 }
}
x[!is.na(x)] %>% as.numeric()
y[!is.na(y)] %>% as.numeric()
x[!is.na(x)] %>% as.numeric() %>% sum()
y[!is.na(y)] %>% as.numeric() %>% sum()
x_distance <- x[!is.na(x)] %>% as.numeric() %>% sum()
y_distance <- y[!is.na(y)] %>% as.numeric() %>% sum()
abs(x_distance) + abs(y_distance)
total_blocks <- abs(x_distance) + abs(y_distance)
total_blocks
path <- read_csv("/Users/richpauloo/Desktop/path.csv", header = FALSE)
?read_csv
path <- read_csv("/Users/richpauloo/Desktop/path.csv", col_names = FALSE)
path
turn <- t(path) %>% str_extract("[R|L]")
walk <- t(path) %>% str_extract("[:digit:]") %>% as.numeric()
turn
walk
library(tidyverse)
library(ggplot2)
library(plyr)
library(scales)
library(zoo)
df <- read.csv("https://raw.githubusercontent.com/selva86/datasets/master/yahoo.csv")
df$date <- as.Date(df$date)  # format date
df <- df[df$year >= 2012, ]  # filter reqd years
# Create Month Week
df$yearmonth <- as.yearmon(df$date)
df$yearmonthf <- factor(df$yearmonth)
df <- ddply(df,.(yearmonthf), transform, monthweek=1+week-min(week))  # compute week number of month
df <- df[, c("year", "yearmonthf", "monthf", "week", "monthweek", "weekdayf", "VIX.Close")]
head(df)
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_gradient(low="red", high="green") +
labs(x="Week of Month",
y="",
title = "Time-Series Calendar Heatmap",
subtitle="Yahoo Closing Price",
fill="Close")
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_gradient(low="red", high="blue") +
labs(x="Week of Month",
y="",
title = "Time-Series Calendar Heatmap",
subtitle="Yahoo Closing Price",
fill="Close")
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_viridis_c() +
labs(x="Week of Month",
y="",
title = "Time-Series Calendar Heatmap",
subtitle="Yahoo Closing Price",
fill="Close")
library(forcats)
levels(df$weekdayf)
levels(df$yearmonthf) <- c("Friday","Thursday","Wednesday","Tuesday","Monday")
levels(df$yearmonthf) <- c("Fri","Thu","Wed","Tue","Mon")
levels(df$weekdayf)[1]
levels(df$weekdayf)
c("Fri","Thu","Wed","Tue","Mon")
levels(df$yearmonthf) <- c(1,3,5,4,2)
levels(df$yearmonthf) <- factor(c("Fri","Thu","Wed","Tue","Mon"))
df$yearmonthf <- factor(df$yearmonthf, levels = c("Fri","Thu","Wed","Tue","Mon"))
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_viridis_c() +
labs(x="Week of Month",
y="",
title = "Time-Series Calendar Heatmap",
subtitle="Yahoo Closing Price",
fill="Close")
head(df)
df <- read.csv("https://raw.githubusercontent.com/selva86/datasets/master/yahoo.csv")
df$date <- as.Date(df$date)  # format date
df <- df[df$year >= 2012, ]  # filter reqd years
# Create Month Week
df$yearmonth <- as.yearmon(df$date)
df$yearmonthf <- factor(df$yearmonth)
df <- ddply(df,.(yearmonthf), transform, monthweek=1+week-min(week))  # compute week number of month
df <- df[, c("year", "yearmonthf", "monthf", "week", "monthweek", "weekdayf", "VIX.Close")]
head(df)
df$weekdayf <- factor(df$weekdayf, levels = c("Fri","Thu","Wed","Tue","Mon"))
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_viridis_c() +
labs(x="Week of Month",
y="",
title = "Time-Series Calendar Heatmap",
subtitle="Yahoo Closing Price",
fill="Close")
